/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alarm;

import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;

/**
 *
 * @author Sara
 */
public class MainView extends javax.swing.JFrame implements Observer {

    Model m;
    
    /**
     * Creates new form main
     */
    public MainView(Model model) {
        Model m = model;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        pContain = new javax.swing.JPanel();
        pClock = new javax.swing.JPanel();
        lblDate = new javax.swing.JLabel();
        clockMin = new javax.swing.JLabel();
        clockHour = new javax.swing.JLabel();
        clockSec = new javax.swing.JLabel();
        sep2 = new javax.swing.JLabel();
        sep1 = new javax.swing.JLabel();
        pNextAlarm = new javax.swing.JPanel();
        lblNext = new javax.swing.JLabel();
        lblNextAlarm = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        muAdd = new javax.swing.JMenuItem();
        muEdit = new javax.swing.JMenuItem();
        muRemove = new javax.swing.JMenuItem();
        muAll = new javax.swing.JMenuItem();
        muExport = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDate.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 36)); // NOI18N
        lblDate.setText("01/01/1900");

        clockMin.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 80)); // NOI18N
        clockMin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockMin.setText("00");

        clockHour.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 80)); // NOI18N
        clockHour.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockHour.setText("00");

        clockSec.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 80)); // NOI18N
        clockSec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clockSec.setText("00");

        sep2.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 80)); // NOI18N
        sep2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sep2.setText(":");

        sep1.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 80)); // NOI18N
        sep1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sep1.setText(":");

        javax.swing.GroupLayout pClockLayout = new javax.swing.GroupLayout(pClock);
        pClock.setLayout(pClockLayout);
        pClockLayout.setHorizontalGroup(
            pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pClockLayout.createSequentialGroup()
                .addComponent(clockHour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sep1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clockMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sep2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clockSec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pClockLayout.setVerticalGroup(
            pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pClockLayout.createSequentialGroup()
                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(pClockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clockSec, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(sep2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clockMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clockHour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        lblNext.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        lblNext.setText("Next Alarm");

        lblNextAlarm.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 36)); // NOI18N
        lblNextAlarm.setText("01/01/1900 00:01:00");

        javax.swing.GroupLayout pNextAlarmLayout = new javax.swing.GroupLayout(pNextAlarm);
        pNextAlarm.setLayout(pNextAlarmLayout);
        pNextAlarmLayout.setHorizontalGroup(
            pNextAlarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblNextAlarm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pNextAlarmLayout.setVerticalGroup(
            pNextAlarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pNextAlarmLayout.createSequentialGroup()
                .addComponent(lblNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNextAlarm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pContainLayout = new javax.swing.GroupLayout(pContain);
        pContain.setLayout(pContainLayout);
        pContainLayout.setHorizontalGroup(
            pContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pClock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pNextAlarm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pContainLayout.setVerticalGroup(
            pContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContainLayout.createSequentialGroup()
                .addComponent(pClock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pNextAlarm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pContain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pContain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Alarms");
        jMenu1.setToolTipText("");

        muAdd.setText("Add");
        jMenu1.add(muAdd);

        muEdit.setText("Edit");
        muEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muEditActionPerformed(evt);
            }
        });
        jMenu1.add(muEdit);

        muRemove.setText("Remove");
        jMenu1.add(muRemove);

        muAll.setText("View All");
        jMenu1.add(muAll);

        jMenuBar1.add(jMenu1);

        muExport.setText("Export");
        jMenuBar1.add(muExport);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void muEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_muEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel clockHour;
    private javax.swing.JLabel clockMin;
    private javax.swing.JLabel clockSec;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblNext;
    private javax.swing.JLabel lblNextAlarm;
    private javax.swing.JMenuItem muAdd;
    private javax.swing.JMenuItem muAll;
    private javax.swing.JMenuItem muEdit;
    private javax.swing.JMenu muExport;
    private javax.swing.JMenuItem muRemove;
    private javax.swing.JPanel pClock;
    private javax.swing.JPanel pContain;
    private javax.swing.JPanel pNextAlarm;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel sep1;
    private javax.swing.JLabel sep2;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JLabel getDate(){
        return lblDate;
    }
    
    public javax.swing.JLabel getHour(){
        return clockHour;
    }
    
    public javax.swing.JLabel getMin(){
        return clockMin;
    }
    
    public javax.swing.JLabel getSecond(){
        return clockSec;
    }
    
    public javax.swing.JLabel getAlarm(){
        return lblNextAlarm;
    }
    
    public void update(Observable o, Object data) { 
      /* System.out.println((String)data);
       clockHour.setText((String)data);
       /*clockHour.getText();
       clockMin.setText(String.valueOf(m.minute));
       clockSec.setText(String.valueOf(m.second));
       lblDate.setText(m.datelbl);*/
    }
}
